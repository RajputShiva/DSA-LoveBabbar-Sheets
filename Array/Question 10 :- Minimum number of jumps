


------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Example 1:

Input:
N = 11 
arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9} 
Output: 3 
Explanation: 
First jump from 1st element to 2nd 
element with value 3. Now, from here 
we jump to 5th element with value 9, 
and from here we will jump to the last. 
Example 2:

Input :
N = 6
arr = {1, 4, 3, 2, 6, 7}
Output: 2 
Explanation: 
First we jump from the 1st to 2nd element 
and then jump to the last element.

TC = O(n)
SC = O(1)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 static int minJumps(int[] arr){
        // your code here
        int jump=0;
        int pos=0;
        int des=0;
        //here check jumps less than 1 or 1 so return 0
        if(arr.length<=1){     
            return 0;
        }
        // here check jumps
        for(int i=0;i<arr.length-1;i++){
            des=Math.max(des,arr[i]+i);
            if(i==pos){
                pos=des;
                jump++;
            }
        }
        //here position agar n-1 se chota hoga to means ki wo ek bhi jump nhi liya hain to me return -1 kr dunga is case me
        aur agar position greter than n-1 to jumps return kr dunga.
        if(pos<arr.length-1){
            return -1;
        }
        else{
            return jump;    
        }  
    }
